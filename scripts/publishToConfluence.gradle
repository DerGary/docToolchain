buildscript {
    repositories {
        maven {
            credentials {
                username mavenUsername
                password mavenPassword
            }
            url mavenRepository
        }
    }
    dependencies {
        classpath("org.docToolchain:core")
    }
}

import org.docToolchain.tasks.VerifyConfluenceApiAccessTask

//tag::verifyConfluenceApiAccess[]
task verifyConfluenceApiAccess(
    description: 'verifies confluence API URL and credentials are set correctly',
    group: 'docToolchain'
) {
    doLast {
        //TODO default should be false, if the V1 has been removed in cloud
        config.confluence.useV1Api = findProperty("confluence.useV1Api") != null ?
            findProperty("confluence.useV1Api") : config.confluence.useV1Api != [:] ?
            config.confluence.useV1Api :true
        new VerifyConfluenceApiAccessTask(config).execute()
    }
}
//end::verifyConfluenceApiAccess[]

//tag::publishToConfluence[]
task publishToConfluence(
        description: 'publishes the HTML rendered output to confluence',
        group: 'docToolchain'
) {
    doLast {
        logger.info("docToolchain> docDir: "+docDir)
        config.confluence.api = findProperty("confluence.api")?:config.confluence.api
        //TODO default should be false, if the V1 has been removed in cloud
        config.confluence.useV1Api = findProperty("confluence.useV1Api") != null ?
            findProperty("confluence.useV1Api") : config.confluence.useV1Api != [:] ?
            config.confluence.useV1Api :true
        binding.setProperty('config',config)
        binding.setProperty('docDir',docDir)
        evaluate(new File(projectDir, 'core/src/main/groovy/org/docToolchain/scripts/asciidoc2confluence.groovy'))
    }
}
//end::publishToConfluence[]
project.afterEvaluate {
    project.tasks.publishToConfluence.dependsOn generateHTML
}
